user  nginx;
worker_processes  3;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;

    ############################################
    # services to SSL forward
    ############################################
    upstream bitwarden-websocket-http {
        # bitwarden is running on an own docker network. hence, connect to the host which has the port forwarding.
        server docker-host-01.mfg.otaya.cc:8080;
    }

#    upstream bitwarden-websocket-https {
#        server docker-host-01.mfg.otaya.cc:8443;
#    }

    server {
       listen 80;
        server_name bitwarden.mfg.otaya.cc;

        location / {
            proxy_pass http://bitwarden-websocket-http;
            proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection $connection_upgrade;
        }
    }

#    location /upstream {
#      proxy_ssl_trusted_certificate /etc/ssl/certs/bitwarden.mfg.otaya.crt;
#      proxy_ssl_verify       on;
#      proxy_ssl_verify_depth 2;
#      # proxy_ssl_session_reuse on;
#    }

#    server {
#       listen 443 ssl;
#        server_name bitwarden.mfg.otaya.cc;

#        location / {
#            proxy_ssl_trusted_certificate /etc/ssl/certs/bitwarden.mfg.otaya.crt;
#            proxy_ssl_verify       on;
#            proxy_ssl_verify_depth 2;

#            proxy_pass http://bitwarden-websocket-https;
#            proxy_http_version 1.1;
#            # proxy_set_header Upgrade $http_upgrade;
#            # proxy_set_header Connection $connection_upgrade;
#        }
#    }
}

stream {
    upstream bitwarden-https {
        # Our web server, listening for SSL traffic
        # Note the web server will expect traffic
        # at this xip.io "domain", just for our
        # example here
        server docker-host-01.mfg.otaya.cc:8443;
    }

    server {
        listen 443;
        proxy_pass bitwarden-https;
    }
}
